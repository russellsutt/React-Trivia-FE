{"ast":null,"code":"var _jsxFileName = \"/Users/russellsutter/Development/Flatiron/code/Mod4/mod4-project-frontend/src/Components/Game.js\";\nimport React from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport Question from './Question';\nconst BASE_API = 'http://localhost:3000';\n\nclass Game extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allQuestions: [],\n      filteredQuestions: [],\n      category: this.props.category,\n      numberOfQuestions: this.props.numberOfQuestions,\n      difficulty: this.props.difficulty\n    };\n\n    this.shuffle = a => {\n      var j, x, i;\n\n      for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n      }\n\n      return a;\n    };\n\n    this.getQuestions = () => {\n      let filteredArray = this.state.allQuestions.filter(question => {\n        if (question.category === this.state.category && question.difficulty === this.state.difficulty) {\n          return question;\n        }\n      });\n      let shuffledArray = this.shuffle(filteredArray);\n      let slicedArray = shuffledArray.slice(0, 10);\n      this.setState({\n        filteredQuestions: slicedArray\n      });\n    };\n\n    this.nextQuestion = () => {};\n\n    this.renderQuestion = () => {\n      let singleQuestion = this.state.filteredQuestions.slice(0, 1);\n      return /*#__PURE__*/React.createElement(Question, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 16\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(`${BASE_API}/questions`).then(resp => resp.json()).then(data => this.setState({\n      allQuestions: data\n    })).then(() => this.getQuestions());\n  }\n\n  componentDidUpdate() {\n    console.log(this.props);\n    console.log(this.state.filteredQuestions);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, this.state.category), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, this.state.difficulty), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, this.state.numberOfQuestions), this.renderQuestion());\n  }\n\n}\n\nexport default withRouter(Game);","map":{"version":3,"sources":["/Users/russellsutter/Development/Flatiron/code/Mod4/mod4-project-frontend/src/Components/Game.js"],"names":["React","withRouter","Question","BASE_API","Game","Component","state","allQuestions","filteredQuestions","category","props","numberOfQuestions","difficulty","shuffle","a","j","x","i","length","Math","floor","random","getQuestions","filteredArray","filter","question","shuffledArray","slicedArray","slice","setState","nextQuestion","renderQuestion","singleQuestion","componentDidMount","fetch","then","resp","json","data","componentDidUpdate","console","log","render"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { withRouter } from 'react-router-dom'\nimport Question from './Question'\n\nconst BASE_API = 'http://localhost:3000'\n\nclass Game extends React.Component {\n\n    state = {\n        allQuestions: [],\n        filteredQuestions: [],\n        category: this.props.category,\n        numberOfQuestions: this.props.numberOfQuestions,\n        difficulty: this.props.difficulty\n    }\n\n    componentDidMount() {\n\n        fetch(`${BASE_API}/questions`)\n            .then(resp => resp.json())\n            .then(data => this.setState({ allQuestions: data }))\n            .then(() => this.getQuestions() )\n    }\n\n    componentDidUpdate() {\n        console.log(this.props)\n        console.log(this.state.filteredQuestions)\n    }\n\n    shuffle = (a) =>  {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n}\n\n    getQuestions = () => {\n        let filteredArray = this.state.allQuestions.filter(question => {\n            if ((question.category === this.state.category) && (question.difficulty === this.state.difficulty)) {\n                return question\n            }\n        })\n        let shuffledArray = this.shuffle(filteredArray)\n        let slicedArray = shuffledArray.slice(0, 10)\n        this.setState({ filteredQuestions: slicedArray })\n    }\n\n    nextQuestion = () => {\n\n    }\n\n    renderQuestion = () => {\n        let singleQuestion = this.state.filteredQuestions.slice(0, 1);\n        return <Question />\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <h1>{this.state.category}</h1>\n                <h1>{this.state.difficulty}</h1>\n                <h1>{this.state.numberOfQuestions}</h1>\n                {this.renderQuestion()}\n            </div>\n        )\n    }\n\n}\n\n\nexport default withRouter(Game)"]},"metadata":{},"sourceType":"module"}