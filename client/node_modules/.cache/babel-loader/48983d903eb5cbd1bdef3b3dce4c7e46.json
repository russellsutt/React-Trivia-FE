{"ast":null,"code":"var _jsxFileName = \"/Users/russellsutter/Development/Flatiron/code/Mod4/mod4-project/mod4-project-frontend/client/src/Components/Game.js\";\nimport React from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport Question from './Question';\nimport Chat from './Chat';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport Leaderboard from './Leaderboard';\nconst BASE_API = 'http://localhost:3000';\n\nclass Game extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allQuestions: [],\n      filteredQuestions: [],\n      category: this.props.category,\n      numberOfQuestions: this.props.numberOfQuestions,\n      difficulty: this.props.difficulty,\n      submitted: false\n    };\n\n    this.shuffle = a => {\n      var j, x, i;\n\n      for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n      }\n\n      return a;\n    };\n\n    this.setQuestions = () => {\n      let filteredArray = this.state.allQuestions.filter(question => {\n        if (question.category === this.state.category && question.difficulty === this.state.difficulty) {\n          return question;\n        }\n      });\n      let shuffledArray = this.shuffle(filteredArray);\n      let slicedArray = shuffledArray.slice(0, this.state.numberOfQuestions);\n      this.setState({\n        filteredQuestions: slicedArray\n      });\n    };\n\n    this.nextQuestion = value => {\n      if (this.state.filteredQuestions !== 0) {\n        let newArray = this.state.filteredQuestions.shift();\n        this.setState({\n          filteredArray: newArray\n        });\n        this.setState(prevState => ({\n          questionsLeft: prevState.questionsLeft - 1\n        }));\n        this.props.updateScore(value);\n      }\n    };\n\n    this.updateQuestions = () => {};\n\n    this.renderQuestion = () => {\n      let singleQuestion = this.state.filteredQuestions.slice(0, 1);\n      return /*#__PURE__*/React.createElement(Question, {\n        key: singleQuestion.id,\n        question: singleQuestion[0],\n        nextQuestion: this.nextQuestion,\n        answered: this.state.answered,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 16\n        }\n      });\n    };\n\n    this.submitScore = () => {\n      const questions = parseInt(this.props.numberOfQuestions);\n      fetch(BASE_API + \"/scores\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accepts\": \"application/json\"\n        },\n        body: JSON.stringify({\n          points: this.props.score,\n          difficulty: this.props.difficulty,\n          category: this.props.category,\n          questions: questions,\n          user_id: this.props.user.id\n        })\n      }).then(resp => resp.json()).then(resp => console.log(resp)).then(resp => this.setState({\n        submitted: true\n      }));\n    };\n\n    this.resetState = () => {\n      this.setState({\n        filteredQuestions: [],\n        category: this.props.category,\n        numberOfQuestions: this.props.numberOfQuestions,\n        difficulty: this.props.difficulty,\n        submitted: false\n      });\n      setTimeout(this.props.newGame(), 500);\n    };\n  }\n\n  componentDidMount() {\n    fetch(`${BASE_API}/questions`).then(resp => resp.json()).then(data => this.setState({\n      allQuestions: data\n    })).then(() => this.setQuestions());\n  }\n\n  componentDidUpdate() {}\n\n  capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  render() {\n    // console.log(this.props.user.user.scores.map(el => el.points).reduce((a, b) => a + b, 0))\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"header-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"header-container-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 34\n      }\n    }, \"Category - \", this.capitalize(this.state.category))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"header-container-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 34\n      }\n    }, \"Difficulty - \", this.capitalize(this.state.difficulty))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"header-container-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 34\n      }\n    }, \"Questions Left - \", this.state.filteredQuestions.length)), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }, this.state.filteredQuestions.length === 0 ? /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"header-container-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 80\n      }\n    }, \"Good Game!\") : /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"header-container-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 136\n      }\n    }, \"Current Score: \", this.props.score, \" / \", this.props.numberOfQuestions))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, this.props.user ? /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 57\n      }\n    }, \"Name: \", this.props.user.name, \" \") : null)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, this.props.user.scores.length > 0 ? /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 75\n      }\n    }, \"Total Score: \", this.props.user.scores.map(el => el.points).reduce((a, b) => a + b, 0)) : /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 172\n      }\n    }, \"Woot woot!\")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"container-4\",\n      sm: 7,\n      id: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }, this.state.filteredQuestions.length === 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 127\n      }\n    }, \"Thank you for playing!\"), \" \", /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 159\n      }\n    }, \" Final Score: \", this.props.score, \" / \", this.props.numberOfQuestions), \" \", /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      disabled: this.state.submitted,\n      onClick: () => this.submitScore(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 234\n      }\n    }, \"Submit Score!\"), \" \", /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: () => this.resetState(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 347\n      }\n    }, \"New Game\"), \" \", /*#__PURE__*/React.createElement(Leaderboard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 424\n      }\n    }), \" \") : /*#__PURE__*/React.createElement(React.Fragment, null, this.renderQuestion()), \" \"), /*#__PURE__*/React.createElement(Col, {\n      sm: 3,\n      className: \"chat-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Chat, {\n      user: this.state.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 73\n      }\n    }), \" \"))))));\n  }\n\n}\n\nexport default withRouter(Game);","map":{"version":3,"sources":["/Users/russellsutter/Development/Flatiron/code/Mod4/mod4-project/mod4-project-frontend/client/src/Components/Game.js"],"names":["React","withRouter","Question","Chat","Container","Row","Col","Button","Leaderboard","BASE_API","Game","Component","state","allQuestions","filteredQuestions","category","props","numberOfQuestions","difficulty","submitted","shuffle","a","j","x","i","length","Math","floor","random","setQuestions","filteredArray","filter","question","shuffledArray","slicedArray","slice","setState","nextQuestion","value","newArray","shift","prevState","questionsLeft","updateScore","updateQuestions","renderQuestion","singleQuestion","id","answered","submitScore","questions","parseInt","fetch","method","headers","body","JSON","stringify","points","score","user_id","user","then","resp","json","console","log","resetState","setTimeout","newGame","componentDidMount","data","componentDidUpdate","capitalize","str","charAt","toUpperCase","render","name","scores","map","el","reduce","b"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { withRouter } from 'react-router-dom'\nimport Question from './Question'\nimport Chat from './Chat'\nimport { Container, Row, Col, Button } from 'react-bootstrap'\nimport Leaderboard from './Leaderboard'\n\nconst BASE_API = 'http://localhost:3000'\n\nclass Game extends React.Component {\n\n    state = {\n        allQuestions: [],\n        filteredQuestions: [],\n        category: this.props.category,\n        numberOfQuestions: this.props.numberOfQuestions,\n        difficulty: this.props.difficulty,\n        submitted: false,\n    }\n\n    componentDidMount() {\n        fetch(`${BASE_API}/questions`)\n            .then(resp => resp.json())\n            .then(data => this.setState({ allQuestions: data }))\n            .then(() => this.setQuestions() )\n    }\n    componentDidUpdate() {\n    }\n    capitalize(str){\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n    shuffle = (a) =>  {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n    }\n\n    setQuestions = () => {\n        let filteredArray = this.state.allQuestions.filter(question => {\n            if ((question.category === this.state.category) && (question.difficulty === this.state.difficulty)) {\n                return question\n            }\n        })\n        let shuffledArray = this.shuffle(filteredArray)\n        let slicedArray = shuffledArray.slice(0, this.state.numberOfQuestions)\n        this.setState({ filteredQuestions: slicedArray })\n    }\n\n    nextQuestion = (value) => {\n        if (this.state.filteredQuestions !== 0) {\n            let newArray = this.state.filteredQuestions.shift()\n            this.setState({ filteredArray: newArray})\n            this.setState(prevState => ({ questionsLeft: prevState.questionsLeft - 1 }))\n            this.props.updateScore(value)   \n        }\n    }\n\n    updateQuestions = () => {\n\n    }\n\n    renderQuestion = () => {\n        let singleQuestion = this.state.filteredQuestions.slice(0, 1);\n        return <Question key={singleQuestion.id} question={singleQuestion[0]} nextQuestion={this.nextQuestion} answered={this.state.answered}/>\n    }\n\n    submitScore = () => {\n        const questions = parseInt(this.props.numberOfQuestions)\n        fetch(BASE_API + \"/scores\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accepts\": \"application/json\"\n            },\n            body: JSON.stringify({\n                points: this.props.score,\n                difficulty: this.props.difficulty,\n                category: this.props.category,\n                questions: questions,\n                user_id: this.props.user.id\n            })\n        })\n        .then(resp => resp.json())\n        .then(resp => console.log(resp))\n        .then(resp => this.setState({ submitted: true }))\n    }\n\n    resetState = () => {\n        this.setState({\n            filteredQuestions: [],\n            category: this.props.category,\n            numberOfQuestions: this.props.numberOfQuestions,\n            difficulty: this.props.difficulty,\n            submitted: false,\n        });\n        setTimeout(this.props.newGame(), 500)\n    }\n\n    render() {\n        // console.log(this.props.user.user.scores.map(el => el.points).reduce((a, b) => a + b, 0))\n        return (\n            <> \n                <div >\n                    <Container fluid>\n                        <Row className=\"header-container\">\n                            <Col><h3 className=\"header-container-text\">Category - {this.capitalize(this.state.category)}</h3></Col>\n                            <Col><h3 className=\"header-container-text\">Difficulty - {this.capitalize(this.state.difficulty)}</h3></Col>\n                            <Col><h3 className=\"header-container-text\">Questions Left - {this.state.filteredQuestions.length}</h3></Col>\n                            <Col>{ this.state.filteredQuestions.length === 0 ? <h3 className=\"header-container-text\">Good Game!</h3> : <h3 className=\"header-container-text\">Current Score: {this.props.score} / {this.props.numberOfQuestions}</h3>}</Col>\n         \n                            {/* <Col><Chat /></Col> */}\n\n                        </Row>\n                        <div className=\"profile-container\">\n                            <Row >\n                                <Col>{this.props.user ? <h3>Name: { this.props.user.name} </h3> : null}</Col>\n                            </Row>\n                            <Row>\n                                <Col>{this.props.user.scores.length > 0 ? <h3>Total Score: {this.props.user.scores.map(el => el.points).reduce((a, b) => a + b, 0)}</h3> : <h3>Woot woot!</h3>}</Col>\n                            </Row>\n                        </div>\n                        <div >\n                            <Row >\n                                <Col className= \"container-4\" sm={7} id=\"game\">{this.state.filteredQuestions.length === 0 ? <><h1>Thank you for playing!</h1> <h3> Final Score: {this.props.score} / {this.props.numberOfQuestions}</h3> <Button variant=\"dark\" disabled={this.state.submitted} onClick={() => this.submitScore()}>Submit Score!</Button> <Button variant=\"dark\" onClick={() => this.resetState() } >New Game</Button> <Leaderboard /> </> : <>{this.renderQuestion()}</>} </Col>\n                                <Col sm={3} className=\"chat-container\"> <Chat user={this.state.user}/> </Col>\n                            </Row>\n                        </div>\n                    </Container>\n                </div>\n            </>\n        )\n    }\n}\n\n\nexport default withRouter(Game)"]},"metadata":{},"sourceType":"module"}