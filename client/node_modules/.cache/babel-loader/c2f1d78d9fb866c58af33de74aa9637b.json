{"ast":null,"code":"var _jsxFileName = \"/Users/russellsutter/Development/Flatiron/code/Mod4/mod4-project-frontend/src/Components/Question.js\";\nimport React from 'react';\nimport Answer from './Answer';\n\nclass Question extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.renderAnswers = () => {\n      console.log(this.props.question);\n\n      if (this.props.question.length !== 0) {\n        let answers = this.props.question.incorrect_answers.map(answer => {\n          return /*#__PURE__*/React.createElement(Answer, {\n            id: \"incorrect\",\n            key: this.props.question.id,\n            value: 0,\n            answer: answer,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 24\n            }\n          });\n        });\n        let correctAnswer = this.props.question.correctAnswer.map(answer => {\n          return /*#__PURE__*/React.createElement(Answer, {\n            id: \"correct\",\n            key: this.props.question.id,\n            value: 1,\n            answer: answer,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 24\n            }\n          });\n        });\n        answers.push(correctAnswer);\n        return this.props.shuffle(answers);\n      } else {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, this.props.question.question), this.renderAnswers());\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/russellsutter/Development/Flatiron/code/Mod4/mod4-project-frontend/src/Components/Question.js"],"names":["React","Answer","Question","Component","state","renderAnswers","console","log","props","question","length","answers","incorrect_answers","map","answer","id","correctAnswer","push","shuffle","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B,EAF2B;;AAAA,SAMnCC,aANmC,GAMnB,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,QAAvB;;AACA,UAAI,KAAKD,KAAL,CAAWC,QAAX,CAAoBC,MAApB,KAA+B,CAAnC,EAAsC;AAClC,YAAIC,OAAO,GAAG,KAAKH,KAAL,CAAWC,QAAX,CAAoBG,iBAApB,CAAsCC,GAAtC,CAA0CC,MAAM,IAAI;AAC9D,8BAAO,oBAAC,MAAD;AAAQ,YAAA,EAAE,EAAC,WAAX;AAAuB,YAAA,GAAG,EAAE,KAAKN,KAAL,CAAWC,QAAX,CAAoBM,EAAhD;AAAoD,YAAA,KAAK,EAAE,CAA3D;AAA8D,YAAA,MAAM,EAAED,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,SAFa,CAAd;AAGA,YAAIE,aAAa,GAAG,KAAKR,KAAL,CAAWC,QAAX,CAAoBO,aAApB,CAAkCH,GAAlC,CAAsCC,MAAM,IAAI;AAChE,8BAAO,oBAAC,MAAD;AAAQ,YAAA,EAAE,EAAC,SAAX;AAAqB,YAAA,GAAG,EAAE,KAAKN,KAAL,CAAWC,QAAX,CAAoBM,EAA9C;AAAkD,YAAA,KAAK,EAAE,CAAzD;AAA4D,YAAA,MAAM,EAAED,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,SAFmB,CAApB;AAGAH,QAAAA,OAAO,CAACM,IAAR,CAAaD,aAAb;AACA,eAAO,KAAKR,KAAL,CAAWU,OAAX,CAAmBP,OAAnB,CAAP;AACH,OATD,MASO,CAEN;AACJ,KApBkC;AAAA;;AAsBnCQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKX,KAAL,CAAWC,QAAX,CAAoBA,QAAzB,CADJ,EAES,KAAKJ,aAAL,EAFT,CADJ;AAQH;;AA/BkC;;AAmCvC,eAAeH,QAAf","sourcesContent":["import React from 'react'\nimport Answer from './Answer'\n\nclass Question extends React.Component {\n    \n    state = {\n\n    }\n\n    renderAnswers = () => {\n        console.log(this.props.question)\n        if (this.props.question.length !== 0) {\n            let answers = this.props.question.incorrect_answers.map(answer => {\n                return <Answer id=\"incorrect\" key={this.props.question.id} value={0} answer={answer} />\n            })\n            let correctAnswer = this.props.question.correctAnswer.map(answer => {\n                return <Answer id=\"correct\" key={this.props.question.id} value={1} answer={answer} />\n            })\n            answers.push(correctAnswer)\n            return this.props.shuffle(answers)\n        } else {\n            \n        }\n    }\n\n    render() {\n        return (\n            <div className=\"question\">\n                <h1>{this.props.question.question}</h1>\n                    {this.renderAnswers()}\n            </div>\n            \n        )\n\n    }\n\n}\n\nexport default Question"]},"metadata":{},"sourceType":"module"}