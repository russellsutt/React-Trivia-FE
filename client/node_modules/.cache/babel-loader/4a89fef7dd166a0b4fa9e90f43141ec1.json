{"ast":null,"code":"var _jsxFileName = \"/Users/russellsutter/Development/Flatiron/code/Mod4/mod4-project-frontend/src/Components/Game.js\";\nimport React from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport Question from './Question';\nconst BASE_API = 'http://localhost:3000';\n\nclass Game extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allQuestions: [],\n      filteredQuestions: [],\n      category: this.props.category,\n      numberOfQuestions: this.props.numberOfQuestions,\n      difficulty: this.props.difficulty\n    };\n\n    this.shuffle = a => {\n      var j, x, i;\n\n      for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n      }\n\n      return a;\n    };\n\n    this.getQuestions = () => {\n      let filteredArray = this.state.allQuestions.filter(question => {\n        return question.category === this.state.category && question.difficulty === this.state.difficulty;\n      });\n      let shuffledArray = this.shuffle(filteredArray);\n      let slicedArray = shuffledArray.slice(0, 10);\n      this.setState({\n        filteredQuestions: slicedArray\n      });\n    };\n\n    this.nextQuestion = () => {};\n\n    this.renderQuestion = () => {\n      let singleQuestion = this.state.filteredQuestions.slice(0, 1);\n      console.log(singleQuestion);\n      return /*#__PURE__*/React.createElement(Question, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(`${BASE_API}/questions`).then(resp => resp.json()).then(data => this.setState({\n      allQuestions: data\n    })).then(() => this.getQuestions());\n  }\n\n  componentDidUpdate() {\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, this.state.category), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, this.state.difficulty), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, this.state.numberOfQuestions), this.renderQuestion());\n  }\n\n}\n\nexport default withRouter(Game);","map":{"version":3,"sources":["/Users/russellsutter/Development/Flatiron/code/Mod4/mod4-project-frontend/src/Components/Game.js"],"names":["React","withRouter","Question","BASE_API","Game","Component","state","allQuestions","filteredQuestions","category","props","numberOfQuestions","difficulty","shuffle","a","j","x","i","length","Math","floor","random","getQuestions","filteredArray","filter","question","shuffledArray","slicedArray","slice","setState","nextQuestion","renderQuestion","singleQuestion","console","log","componentDidMount","fetch","then","resp","json","data","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { withRouter } from 'react-router-dom'\nimport Question from './Question'\n\nconst BASE_API = 'http://localhost:3000'\n\nclass Game extends React.Component {\n\n    state = {\n        allQuestions: [],\n        filteredQuestions: [],\n        category: this.props.category,\n        numberOfQuestions: this.props.numberOfQuestions,\n        difficulty: this.props.difficulty\n    }\n\n    componentDidMount() {\n        fetch(`${BASE_API}/questions`)\n            .then(resp => resp.json())\n            .then(data => this.setState({ allQuestions: data }))\n            .then(() => this.getQuestions() )\n    }\n\n    componentDidUpdate() {\n        console.log(this.state)\n    }\n\n    shuffle = (a) =>  {\n    var j, x, i;\n    for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n    }\n    return a;\n}\n\n    getQuestions = () => {\n        let filteredArray = this.state.allQuestions.filter(question => {\n            return ((question.category === this.state.category) && (question.difficulty === this.state.difficulty))\n        })\n        let shuffledArray = this.shuffle(filteredArray)\n        let slicedArray = shuffledArray.slice(0, 10)\n        this.setState({ filteredQuestions: slicedArray })\n    }\n\n    nextQuestion = () => {\n\n    }\n\n    renderQuestion = () => {\n        let singleQuestion = this.state.filteredQuestions.slice(0, 1);\n        console.log(singleQuestion)\n        return <Question />\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <h1>{this.state.category}</h1>\n                <h1>{this.state.difficulty}</h1>\n                <h1>{this.state.numberOfQuestions}</h1>\n                {this.renderQuestion()}\n            </div>\n        )\n    }\n\n}\n\n\nexport default withRouter(Game)"]},"metadata":{},"sourceType":"module"}