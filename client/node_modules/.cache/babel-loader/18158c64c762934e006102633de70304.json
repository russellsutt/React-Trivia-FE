{"ast":null,"code":"var _jsxFileName = \"/Users/russellsutter/Development/Flatiron/code/Mod4/mod4-project-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Login from './Components/Login';\nimport Signup from './Components/Signup';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport GameContainer from './Containers/GameContainer';\nconst BASE_API = 'http://localhost:3000';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null\n    };\n\n    this.signupHandler = userObj => {\n      fetch(`${BASE_API}/users`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          user: userObj\n        })\n      }).then(r => r.json()).then(console.log).then(resp => {\n        localStorage.setItem(data.jwt);\n        this.pushState('/lobby');\n        window.history.forward('lobby');\n      });\n    };\n\n    this.loginHandler = userInfo => {\n      console.log(userInfo);\n      fetch(`${BASE_API}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          user: userInfo\n        })\n      }).then(r => r.json()).then(data => {\n        localStorage.setItem(data.jwt);\n      });\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      fetch(`${BASE_API}/profile`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(r => r.json()).then(data => this.setState({\n        user: data.user\n      }));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      render: () => /*#__PURE__*/React.createElement(Signup, {\n        submitHandler: this.loginHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 42\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/signup\",\n      render: () => /*#__PURE__*/React.createElement(Signup, {\n        submitHandler: this.signupHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 43\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/lobby\",\n      render: () => this.state.user ? /*#__PURE__*/React.createElement(GameContainer, {\n        user: this.state.user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 60\n        }\n      }) : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/signup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 102\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/russellsutter/Development/Flatiron/code/Mod4/mod4-project-frontend/src/App.js"],"names":["React","Component","Login","Signup","Route","Switch","Redirect","GameContainer","BASE_API","App","state","user","signupHandler","userObj","fetch","method","headers","Accept","body","JSON","stringify","then","r","json","console","log","resp","localStorage","setItem","data","jwt","pushState","window","history","forward","loginHandler","userInfo","componentDidMount","token","getItem","Authorization","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from './Components/Login'\nimport Signup from './Components/Signup'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport GameContainer from './Containers/GameContainer'\n\nconst BASE_API = 'http://localhost:3000'\n\nclass App extends Component {\n\n  state = {\n    user: null\n  }\n\n  componentDidMount(){\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      fetch(`${BASE_API}/profile`, {\n        method: \"GET\",\n        headers: { Authorization: `Bearer ${token}`},\n      })  \n      .then(r => r.json())\n      .then(data => this.setState( {user: data.user} ))\n    }\n  }\n\n  signupHandler = (userObj) => {\n    fetch(`${BASE_API}/users`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({user: userObj})\n    })\n    .then(r => r.json())\n    .then(console.log)\n      .then(resp => {\n        localStorage.setItem(data.jwt)\n        this.pushState('/lobby')\n        window.history.forward('lobby')\n    })\n  }\n\n  loginHandler = (userInfo) => {\n    console.log(userInfo)\n    fetch(`${BASE_API}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({user: userInfo})\n    })\n    .then(r => r.json())\n    .then(data => {\n      localStorage.setItem(data.jwt)\n    })\n  }\n\n\n\n  render(){\n\n  \n  return (\n    <Switch>\n      <Route path=\"/login\" render={() => <Signup submitHandler={this.loginHandler}/>}/>\n      <Route path=\"/signup\" render={() => <Signup submitHandler={this.signupHandler} />} />\n      <Route path=\"/lobby\" render={() => this.state.user ? <GameContainer user={this.state.user}/> : <Redirect to='/signup'/>} />\n    </Switch>\n  );\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}