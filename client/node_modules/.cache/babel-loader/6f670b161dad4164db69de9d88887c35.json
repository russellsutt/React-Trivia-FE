{"ast":null,"code":"var _jsxFileName = \"/Users/russellsutter/Development/Flatiron/code/Mod4/mod4-project/mod4-project-frontend/client/src/Components/Chat.js\";\nimport React from 'react';\nimport { Button, Form, Container, Col } from 'react-bootstrap';\nimport io from 'socket.io-client';\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super();\n\n    this.submitMessage = e => {\n      e.preventDefault();\n      let name = this.state.user.name;\n      this.socket.emit('new message', {\n        author: name,\n        message: this.state.message\n      });\n    };\n\n    this.renderMessages = () => {\n      return this.state.messages.map((message, index) => {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"author\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 35\n          }\n        }, message.author), \" say: \", /*#__PURE__*/React.createElement(\"span\", {\n          className: \"message\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 89\n          }\n        }, message.message));\n      });\n    };\n\n    this.state = {\n      name: props.user,\n      message: '',\n      messages: []\n    };\n    this.socket = io('localhost:3002');\n    this.socket.on('receive message', data => {\n      console.log(data);\n      this.setState({\n        messages: [...this.state.messages, data],\n        message: ''\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"Chat Room\"), /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"messages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, this.renderMessages()), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      inline: true,\n      onSubmit: this.submitMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      size: \"sm\",\n      type: \"text\",\n      autoComplete: \"off\",\n      placeholder: \"Type your Message Here\",\n      value: this.state.message,\n      onChange: e => this.setState({\n        message: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }))))));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/russellsutter/Development/Flatiron/code/Mod4/mod4-project/mod4-project-frontend/client/src/Components/Chat.js"],"names":["React","Button","Form","Container","Col","io","Chat","Component","constructor","props","submitMessage","e","preventDefault","name","state","user","socket","emit","author","message","renderMessages","messages","map","index","on","data","console","log","setState","render","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Form, Container, Col } from 'react-bootstrap'\nimport io from 'socket.io-client'\n\n\nclass Chat extends React.Component {\n\n    constructor(props) {\n        super()\n        this.state = {\n            name: props.user,\n            message: '',\n            messages: [],\n        }\n        this.socket = io('localhost:3002')\n\n        this.socket.on('receive message', (data) => {\n            console.log(data)\n            this.setState({messages: [...this.state.messages, data], message: ''})\n        })\n    }\n\n\n    submitMessage = (e) => {\n        e.preventDefault()\n        let name = this.state.user.name\n        this.socket.emit('new message', {\n            author: name,\n            message: this.state.message\n        })\n    }\n\n\n    renderMessages = () => {\n        return this.state.messages.map((message, index) => { \n            return <p key={index}><span className=\"author\">{message.author}</span> say: <span className=\"message\">{message.message}</span></p>\n        })\n    }\n\n    render() {\n        return (\n            <>\n            <h3>Chat Room</h3>\n            <ul id=\"messages\">\n                {this.renderMessages()}\n                </ul>\n            <Container fluid>\n                <Form inline onSubmit={this.submitMessage}>\n                    <Form.Row>\n                        <Col xs={8}>\n                            <Form.Control\n                                size=\"sm\"\n                                type=\"text\"\n                                autoComplete=\"off\"\n                                placeholder=\"Type your Message Here\"\n                                value={this.state.message}\n                                onChange={(e) => this.setState({ message: e.target.value })}>\n                            </Form.Control>\n                        </Col>\n                        {/* <Col>\n                            <Button size='sm' className=\"send-message\" variant=\"dark\" type=\"submit\">Send</Button>\n                        </Col> */}\n                    </Form.Row>\n                </Form>\n            </Container>\n            </>\n        )\n    }\n\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}